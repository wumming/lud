function[c_p] = updateWeights(c, wh, datay,dataz,T,Yh)
    % ??? Yh ???
    %define variables for optimization
    [m,d] = size(wh);
    N = sum(T);

    %need to define the size of a
    mu = 0.1;
    m = length(w);
    z = zeros(1,m);
    c_p = zeros(1,m);


    for i = 1:m
        ai = sdpvar(1, m, 'full');
        wt = sdpvar(1, d,'full');
        
        % objective
        Obj = (dataz(i)-wt*datay(i,:)').^2; %f_i(wt)
        
        %define our constraint;
        %wt = sum(subs(a(i,j)*w(j), j, 1:m));
        
        Cons = [wt == ai*wh(i,:)';
                sum(ai) == 1; %sum(subs(a(i,k),k,1:m)) == 1;
                2/(mu*N)*T(i) >= ai >= 0]; %2/(alpha*d) >= a(i,:) >= 0
        
        diagnostics = optimize(Cons, Obj);
        %ai_v = double(ai);
        wt_v = double(wt);
        zi = (dataz(i)-wt*datay(i,:)').^2 - (dataz(i)-wh*datay(i,:)').^2;

    end

    %diagnostics = optimize(Cons, Obj);
    %once we get \tilde(w) from the solution of the optimization, we can get
    %z_i
    wt_v = double(wt);
    for p = 1:m
        z(p) = f_i(wt_v(p)) - f_i(wh(p));
    end

    z_max = max(z);
    for i = 1:m
        c_p(i) = c(i)*( (z_max - z(i))/z_max );
    end
end
